// Code generated by MockGen. DO NOT EDIT.
// Source: internal/live-docs/core/survey/repository.go

// Package mocks is a generated GoMock package.
package mocks

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	entities "github.com/valdirmendesdev/live-doc/internal/live-docs/core/entities"
	types "github.com/valdirmendesdev/live-doc/internal/utils/types"
)

// MockSurvey is a mock of Repository interface.
type MockSurvey struct {
	ctrl     *gomock.Controller
	recorder *MockSurveyMockRecorder
}

// MockSurveyMockRecorder is the mock recorder for MockSurvey.
type MockSurveyMockRecorder struct {
	mock *MockSurvey
}

// NewMockSurvey creates a new mock instance.
func NewMockSurvey(ctrl *gomock.Controller) *MockSurvey {
	mock := &MockSurvey{ctrl: ctrl}
	mock.recorder = &MockSurveyMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockSurvey) EXPECT() *MockSurveyMockRecorder {
	return m.recorder
}

// Add mocks base method.
func (m *MockSurvey) Add(s *entities.Survey) (*entities.Survey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Add", s)
	ret0, _ := ret[0].(*entities.Survey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Add indicates an expected call of Add.
func (mr *MockSurveyMockRecorder) Add(s interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Add", reflect.TypeOf((*MockSurvey)(nil).Add), s)
}

// All mocks base method.
func (m *MockSurvey) All() ([]entities.Survey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "All")
	ret0, _ := ret[0].([]entities.Survey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// All indicates an expected call of All.
func (mr *MockSurveyMockRecorder) All() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "All", reflect.TypeOf((*MockSurvey)(nil).All))
}

// GetById mocks base method.
func (m *MockSurvey) GetById(id types.ID) (*entities.Survey, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetById", id)
	ret0, _ := ret[0].(*entities.Survey)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetById indicates an expected call of GetById.
func (mr *MockSurveyMockRecorder) GetById(id interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetById", reflect.TypeOf((*MockSurvey)(nil).GetById), id)
}
